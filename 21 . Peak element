class Solution {
    public int peakElement(int[] arr) {
        
        int n=arr.length;
        // for(int i=0;i<n;i++){
        //     boolean left=true;
        //     boolean right=true;
            
        //     if(i>0 && arr[i]<=arr[i-1]){
        //         left=false;
        //     }
        //     if(i<n-1 && arr[i]<=arr[i+1]){
        //         right=false;
        //     }
            
        //     if(left && right){
        //         return i;
        //     }
        // }
        
        
        // return 0;
        
        //3 cases
        if(n==1) return 0;
        if(arr[0]>arr[1]) return 0;
        if(arr[n-1]>arr[n-2]) return n-1;
        
        int left=1;
        int right=n-2;
        while(left<=right){
            int mid=left+(right-left)/2;
            
            if(arr[mid]>=arr[mid-1] && arr[mid]>=arr[mid+1]){
                return mid;
            }
            
            
            if(arr[mid]<arr[mid+1]){
                left=mid+1;
            }
            else{
                right=mid-1;
            }
        }
        
        return 0;
        
    }
}
